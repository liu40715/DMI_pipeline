version: '3.8'

x-airflow-common:
  &airflow-common
  image: apache/airflow:2.9.2
  environment:
    &airflow-common-environment
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: '7mSIaL1wQmZA5zlTxddiKE-M-GZXWYLVhSts8RU8gBM='
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'False'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./data:/opt/airflow/data
  user: "50000:0"
  depends_on:
    postgres:
      condition: service_healthy

services:
  # Postgres 資料庫
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  # FastAPI
  fastapi:
    build:
      context: ./app
    container_name: my-fastapi
    restart: always
    environment:
      - DATABASE_URL=postgresql://airflow:airflow@postgres:5432/airflow
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./data:/app/data

  # Adminer
  adminer:
    image: adminer
    container_name: my-adminer
    restart: always
    ports:
      - "8081:8080"

  # Redis（不需持久化、不設密碼）
  redis:
    image: redis:alpine
    container_name: my-redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Airflow Webserver
  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      - postgres
      - airflow-init

  # Airflow Scheduler
  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      - postgres
      - airflow-init

  # Airflow 初始化
  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - airflow db init && airflow users create --role Admin --username admin --password admin --email admin@example.com --firstname Admin --lastname User

volumes:
  postgres-db-volume:

